name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint --if-present
    
    - name: Run type checking
      run: npm run type-check --if-present
    
    - name: Build project
      run: npm run build
    
    - name: Run tests
      run: npm test --if-present
    
    - name: Test PWA functionality
      run: |
        npm run build
        npx serve -s dist &
        sleep 5
        curl -f http://localhost:3000 || exit 1
        curl -f http://localhost:3000/manifest.json || exit 1

  lighthouse:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Serve and run Lighthouse
      run: |
        npm install -g @lhci/cli
        npx serve -s dist &
        sleep 5
        lhci autorun --upload.target=temporary-public-storage --collect.url=http://localhost:3000 --collect.url=http://localhost:3000?menu=dinein-non-ac --collect.url=http://localhost:3000?menu=dinein-ac --collect.url=http://localhost:3000?menu=takeaway

  security-scan:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security audit
      run: |
        npm audit --audit-level=high
        npm audit --audit-level=critical
    
    - name: Check for vulnerabilities in dependencies
      uses: actions/setup-node@v4
      with:
        node-version: 18
    
    - name: Install and run security scanner
      run: |
        npm install -g @cyclonedx/cdxgen
        npx @cyclonedx/cdxgen -o bom.json
    
    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      with:
        name: security-scan-results
        path: bom.json

  accessibility-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Run accessibility tests
      run: |
        npm install -g @axe-core/cli
        npx serve -s dist &
        sleep 5
        axe http://localhost:3000 --exit
        axe http://localhost:3000?menu=dinein-non-ac --exit
        axe http://localhost:3000?menu=dinein-ac --exit  
        axe http://localhost:3000?menu=takeaway --exit

  mobile-performance-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Test mobile performance
      run: |
        npm install -g @lhci/cli
        npx serve -s dist &
        sleep 5
        # Test mobile performance specifically
        lhci autorun --upload.target=temporary-public-storage --collect.url=http://localhost:3000 --collect.settings.preset=mobile --collect.numberOfRuns=3

  deploy-preview:
    runs-on: ubuntu-latest
    needs: [test, security-scan, accessibility-test]
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Deploy Preview
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
        projectId: paradise-family
        channelId: preview-${{ github.event.number }}
      env:
        FIREBASE_CLI_EXPERIMENTS: webframeworks

  deploy-production:
    runs-on: ubuntu-latest
    needs: [test, security-scan, accessibility-test, mobile-performance-test]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
      env:
        NODE_ENV: production
    
    - name: Deploy to Firebase Hosting
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
        projectId: paradise-family
        channelId: live
      env:
        FIREBASE_CLI_EXPERIMENTS: webframeworks
    
    - name: Post deployment verification
      run: |
        sleep 30
        curl -f https://paradise-family.web.app || exit 1
        curl -f https://paradise-family.web.app?menu=dinein-non-ac || exit 1
        curl -f https://paradise-family.web.app?menu=dinein-ac || exit 1  
        curl -f https://paradise-family.web.app?menu=takeaway || exit 1
        curl -f https://paradise-family.web.app/manifest.json || exit 1